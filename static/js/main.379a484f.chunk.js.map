{"version":3,"sources":["components/CreateTodoButton.js","TodoContext/index.js","TodoContext/useLocalStorage.js","components/TodoCounter.js","components/TodoIcon.js","components/CompleteIcon.js","components/DeleteIcon.js","components/TodoItem.js","components/TodoSearch.js","components/TodoList.js","Modal/index.js","components/TodoForm.js","components/TodosLoading.js","App/AppUI.js","App.js","index.js"],"names":["CreateTodoButton","props","className","onClick","setopenModal","prevState","TodoContext","createContext","TodoProvider","itemName","initalValue","useState","loading","setLoading","error","setError","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","completedTodos","filter","completed","length","totalTodos","searchedTodos","todo","todoText","text","toLowerCase","searchText","toLocaleLowerCase","includes","console","log","Provider","value","completeTodo","todoIndex","findIndex","newTodos","deleteTodo","splice","addTodo","push","children","TodoCounter","useContext","iconTypes","color","TodoIcon","type","CompleteIcon","onCompleted","DeleteIcon","onDelete","TodoItem","TodoSearch","placeholder","onChange","e","target","TodoList","Modal","createPortal","document","getElementById","TodoForm","newTodoValue","setnewTodoValue","onSubmit","preventDefault","required","TodosLoading","AppUI","Fragment","map","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.379a484f.chunk.js","sourcesContent":["import React from 'react'\nimport  '../styles/CreateTodoButton.css';\nconst CreateTodoButton = (props) => {\n\n  const onClickButton  = () => {\n    props.setopenModal(prevState => !prevState);\n  }\n\n  return (\n    <div>\n        <button className=\"CreateTodoButton\"\n          onClick={onClickButton }\n        >\n            +\n        </button>\n    </div>\n  )\n}\n\nexport  {CreateTodoButton}","import React, { createContext, useEffect, useState } from \"react\";\nimport { useLocalStorage } from \"./useLocalStorage\";\n\n\nconst TodoContext = createContext();\n\nfunction TodoProvider(props) \n{\n    const {\n        item: todos,\n        saveItem: saveTodos,\n        loading,\n        error\n    \n      } = useLocalStorage('TODOS_V1',[]);\n    \n      const [searchValue, setSearchValue] = useState('');\n      const [openModal, setopenModal] = useState(false);\n    \n      const completedTodos = todos.filter(todos => !!todos.completed).length;\n      const totalTodos = todos.length;\n    \n      let searchedTodos = [];\n    \n      if(!searchValue.length >= 1)\n      {\n        searchedTodos = todos;\n      }\n      else\n      {\n        searchedTodos = todos.filter(todo =>{\n          const todoText = todo.text.toLowerCase();\n         \n          const searchText = searchValue.toLocaleLowerCase();\n    \n          return todoText.includes(searchText);\n    \n        })\n      }\n\n      const addTodo = (text) => {\n        \n        const newTodos = [...todos];\n        newTodos.push({\n          completed:false,\n          text,\n        })\n        saveTodos(newTodos);\n      }\n    \n      const completeTodo = (text) => {\n        const todoIndex = todos.findIndex(todo => todo.text === text);\n        const newTodos = [...todos];\n    \n        // todos[todoIndex] = {text:todos[todoIndex].text,completed:true}\n        newTodos[todoIndex].completed = true;\n        console.log(newTodos);\n        saveTodos(newTodos);\n      }\n    \n      \n      const deleteTodo = (text) => {\n        const todoIndex = todos.findIndex(todo => todo.text === text);\n        const newTodos = [...todos];\n    \n        // todos[todoIndex] = {text:todos[todoIndex].text,completed:true}\n        newTodos.splice(todoIndex,1);\n        console.log(newTodos);\n        saveTodos(newTodos);\n      }\n    \n    \n      useEffect(() => {\n        console.log('use efect')\n      }, [totalTodos]);// segundo parametro para saber cuando ejecuar el useEffect solo una vez pero si cuando  hay cambioos en el estado\n \n    return (\n        <TodoContext.Provider \n        value={{\n            totalTodos,\n            completedTodos,\n            searchValue,\n            setSearchValue,\n            searchedTodos,\n            completeTodo,\n            deleteTodo,\n            loading,\n            error,\n            openModal, \n            setopenModal,\n            addTodo\n          \n        }}>\n            {props.children}\n        </TodoContext.Provider>\n    );\n}\n\n \nexport {TodoContext, TodoProvider};","import React, { useEffect, useState } from \"react\";\n\nfunction useLocalStorage(itemName, initalValue) \n{\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  \n  const [item, setItem] = useState(initalValue);\n  \n  useEffect(() => {\n    setTimeout(() => {\n\n      try {\n        \n          const localStorageItem = localStorage.getItem(itemName);\n          let parsedItem;\n        \n          if(!localStorageItem)\n          {\n            localStorage.setItem(itemName, JSON.stringify(initalValue));\n            parsedItem = [];\n          }\n          else\n          {\n            parsedItem = JSON.parse(localStorageItem);\n          }\n\n          setItem(parsedItem);\n          setLoading(false);\n      } catch (error) {\n        setError(error);\n      }\n\n    },2000)\n  }, [])\n\n  const saveItem =  (newItem) => {\n\n    try {\n      const stringifiedItem = JSON.stringify(newItem);\n      localStorage.setItem(itemName,  stringifiedItem);\n      setItem(newItem);\n      \n    } catch (error) {\n      setError(error);\n    }\n  }\n\n  return {\n    item,\n    saveItem,\n    loading,\n    error\n  };\n\n}\n\nexport {useLocalStorage}\n","import React, { useContext } from 'react';\nimport  '../styles/TodoCounter.css';\nimport { TodoContext } from '../TodoContext';\n\n const TodoCounter = () => {\n\n  const {totalTodos, completedTodos} = useContext(TodoContext);\n\n  return (\n    <h2 className='TodoCounter'>Has completado {completedTodos} de {totalTodos}</h2>\n  )\n}\n\nexport {TodoCounter};\n","import React from \"react\";\nimport '../styles/TodoIcon.css';\n\nimport {BsCheckLg  } from'react-icons/bs';\nimport {RiDeleteBack2Line  } from'react-icons/ri';\n\nconst iconTypes = {\n    \"check\":color =>(\n        <BsCheckLg className=\"Icon-sg Icon-sgv--check fill={color}\"/>\n    ),\n    \"delete\":color =>(\n        <RiDeleteBack2Line className=\"Icon-sg Icon-sgv--delete fill={color}\"/>\n    )\n}\n\nfunction TodoIcon({type, color, onClick}) \n{\n    return (\n    <span className={`Icon-container Icon-containe--${type}`}\n        onClick={onClick}\n    >\n        {iconTypes[type](color)}\n    </span> \n    );   \n}\n\nexport {TodoIcon}","import React from \"react\";\nimport { TodoIcon } from \"./TodoIcon\";\n\n\nfunction CompleteIcon({completed, onCompleted}) \n{\n    return (\n        <TodoIcon\n            type=\"check\"\n            color = {completed?'#4caf50':'gray'}\n            onClick={onCompleted}\n        />\n    )\n}\n\nexport {CompleteIcon}\n\n\n","import React from \"react\";\nimport { TodoIcon } from \"./TodoIcon\";\n\n\nfunction DeleteIcon({onDelete}) \n{\n    return (\n        <TodoIcon\n            type=\"delete\"\n            onClick={onDelete}\n        />\n    )\n}\n\nexport {DeleteIcon}","import React from 'react'\nimport  '../styles/TodoItem.css';\nimport { CompleteIcon} from './CompleteIcon';\nimport { DeleteIcon } from './DeleteIcon';\n\nconst TodoItem = (props) => {\n\n  return (\n    <li className=\"TodoItem\">\n      <CompleteIcon\n        completed={props.completed}\n        onCompleted={props.onCompleted}\n      />\n    \n      \n      <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>\n        {props.text}\n      </p>\n      <DeleteIcon \n        onDelete={props.onDelete} />\n    \n    \n    </li>\n  );\n}\n\nexport {TodoItem}; ","import React, { useContext } from 'react'\nimport  '../styles/TodoSearch.css';\nimport { TodoContext } from '../TodoContext';\n\nconst TodoSearch = () => {\n\n  const {searchValue, setSearchValue} = useContext(TodoContext);\n  \n  const onSearchValueChange = (e) => {\n    setSearchValue(e.target.value);\n  }\n  \n  return (\n    <input \n      className=\"TodoSearch\" \n      placeholder=\"Cebolla\" \n      value={searchValue}\n      onChange={onSearchValueChange}\n      />\n  )\n}\n\nexport  {TodoSearch}","import React from 'react'\nimport  '../styles/TodoList.css';\nconst TodoList = (props) => {\n  return (\n    <section>\n        <ul>\n            {props.children}\n        </ul>\n    </section>\n  )\n}\n\nexport  {TodoList}","import ReactDOM, { createPortal } from 'react-dom'; //Esto se cambia\nimport \"../styles/Modal.css\";\n\nfunction Modal({children}) \n{\n    return createPortal(\n        <div className=\"ModalBackground\">\n            {children}\n        </div>,\n        document.getElementById(\"modal\")\n    );    \n}\n\nexport {Modal};","import React, { useContext, useState } from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport \"../styles/TodoForm.css\";\n\nfunction TodoForm() \n{\n    const [newTodoValue, setnewTodoValue] = useState(\"\");\n    \n    const {\n        addTodo,\n        setopenModal, \n    } = useContext(TodoContext);\n    \n    const onCancel = () => {\n        setopenModal(false);\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n       \n        addTodo(newTodoValue);\n        setopenModal(false);\n    }\n\n    const onChange = (e) => {\n        console.log(e.target.value)\n        setnewTodoValue(e.target.value);\n    }\n\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <label>Escribe la nueva tarea</label>\n                <textarea placeholder=\"Tarea\" \n                    value={newTodoValue}\n                    onChange={onChange}\n                    required\n                />\n                \n          \n            <div className=\"TodoForm-buttonContainer\">\n                <button \n                type=\"button\"\n                className=\"TodoForm-button TodoForm-button--cancel\"\n                onClick={onCancel}>\n                    Cancelar\n\n                </button>\n                <button\n                    type=\"submit\"\n                    className=\"TodoForm-button TodoForm-button--cancel\"\n                >\n                    Añadir\n                </button>\n            </div>\n            </form>\n        </div>\n    );\n}\n\nexport {TodoForm};","import React from \"react\";\nimport '../styles/TodosLoading.css';\n\nfunction TodosLoading() \n{\n    return (\n       <div className=\"LoadingTodo-container\">\n            <span className=\"LoadingTodo-completeIcon\"></span>\n             <p className=\"LoadingTodo-text\" >Estamos Cargando</p>\n             <span className=\"LoadingTodo-deleteIcon\"></span>\n       </div>\n       \n    );\n}\n\nexport {TodosLoading}","import React, { useContext } from 'react';\nimport { CreateTodoButton } from '../components/CreateTodoButton';\nimport { TodoCounter } from '../components/TodoCounter';\nimport { TodoItem } from '../components/TodoItem';\nimport { TodoSearch } from '../components/TodoSearch';\nimport { TodoList } from '../components/TodoList';\nimport { TodoContext } from '../TodoContext';\nimport { Modal } from '../Modal/';\nimport { TodoForm } from '../components/TodoForm';\n\nimport { TodosError } from '../components/TodosError';\nimport { TodosLoading } from '../components/TodosLoading';\nimport { EmptyTodos } from '../components/EmptyTodos';\n\n\nfunction AppUI() \n{\n    const {\n        searchedTodos,\n        completeTodo,\n        deleteTodo,\n        loading,\n        error,\n        openModal, \n        setopenModal\n    } = useContext(TodoContext);\n\n    return(\n        <React.Fragment>\n            <TodoCounter />\n            <TodoSearch/>\n\n            {/* <TodoContext.Consumer> */}\n               \n            <TodoList>\n                {error && <p>Error...</p>}\n                {loading && <TodosLoading/>}\n\n                {(!loading && !searchedTodos.length) && <p>Crea tu primera tarea</p>}\n\n                {searchedTodos.map(todo => (\n                    <TodoItem \n                    key={todo.text}\n                    text={todo.text}\n                    completed = {todo.completed}\n                    onCompleted = {() => completeTodo(todo.text)}\n                    onDelete={() => deleteTodo(todo.text)}\n                    />    \n                ))}\n            </TodoList>\n\n            {\n                !!openModal && (\n          \n                <Modal>\n                    <TodoForm/>\n                </Modal>\n            )} \n            {/* </TodoContext.Consumer> */}\n            <CreateTodoButton setopenModal={setopenModal} />\n        </React.Fragment>\n    );\n}\n\nexport {AppUI};","import React from \"react\";\nimport { AppUI } from \"./App/AppUI\";\nimport { TodoProvider } from \"./TodoContext\";\n\n\n\n// import './App.css';\n\n\n// const todosDefault = [\n//   {text: 'Cortar cebolla', completed: false},\n//   {text: 'Cortar Zanahoria', completed: false},\n//   {text: 'Cortar papa', completed: true}\n// ]\n\n\n\nfunction App() \n{\n    return(\n    <TodoProvider>\n        <AppUI/>\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","\nimport ReactDOM from 'react-dom'; //Esto se cambia\nimport './index.css';\nimport App from './App';\nimport React from 'react';\n\nReactDOM.render( //esto tambien se cambia\n    <App />,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}